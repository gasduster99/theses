source("plgp_ei.R")
pall$Y
dim(pall$X)
pall$X[101:120,]
q()
source("plgp_ei.R")
plot(X[,1])
plot(Y)
plot(pall$Y)
source("plgp_ei.R")
plot(pall$Y)
source("plgp_ei.R")
X[1,]
hist(X[,1])
plot(X[,1])
source("plgp_ei.R")
params <- params.GP()
params
preior
prior
dim(pall$X)
source("plgp_ei.R")
source("plgp_ei.R")
source("plgp_ei.R")
source("plgp_ei.R")
source("plgp_ei.R")
dim(XX)
XXs
ls()
outp <- papply(XX=XXs, fun=pred.GP, quants=TRUE, prior=prior)
m <- rep(0, nrow(as.matrix(XX)))
for(i in 1:length(outp)) m <- m + outp[[i]]$m
m <- m / length(outp)
## extract the quantiles of the particles predictive
q2 <- q1 <- rep(0, nrow(as.matrix(XX)))
for(i in 1:length(outp)) {
  q1 <- q1 + outp[[i]]$q1
  q2 <- q2 + outp[[i]]$q2
}
q1 <- q1 / length(outp)
q2 <- q2 / length(outp)
## unscale the data locations
X <- rectunscale(pall$X, rect)
par(mfrow=c(1,2))
image(interp.loess(XX[,1], XX[,2], m))
points(X)
image(interp.loess(XX[,1], XX[,2], q2-q1))
points(X)
dev.new()
par(mfrow=c(1,2)) ## two plots
plot the sampled points over time##
plot(X[,1], main="sampled points",
     xlab="t", ylab="x1 & x2")
abline(v=start, col=3, lty=3)
lines((start+1):end, psave$xstar[,1])
points(X[,2], col=2, pch=18)
lines((start+1):end, psave$xstar[,2], col=2, lty=2)
legend("topright", c("x1", "x2"), col=1:2, pch=c(21,18))
plot the max log ei over time##
plot((start+1):end, psave$max.as, type="l", xlab="t",
     ylab="max log EI", main="progress meter")
pall$Y
min(pall$Y)
which.min(pall$Y)
pall$X[6,]
rectunscale(pall$X[6,],rect)
rect
rectunscale(as.matrix(pall$X[6,]),rect)
rectunscale
pall$X[6,]*20000
par(mfrow=c(1,1))
image(interp.loess(XX[,1], XX[,2], m),
      main="pred mean", xlab="x1", ylab="x2")
points(X,pch=19,cex=0.3)
par(mfrow=c(2,3))
image(interp.loess(XX[,1], XX[,2], m),
      main="pred mean", xlab="x1", ylab="x2")
points(X[,1],X[,2],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,4], m),
      main="pred mean", xlab="x3", ylab="x4")
points(X[,3],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,5], XX[,6], m),
      main="pred mean", xlab="x1", ylab="x2")
points(X[,5],X[,6],pch=19,cex=0.3)
image(interp.loess(XX[,1], XX[,4], m),
      main="pred mean", xlab="x1", ylab="x4")
points(X[,1],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,2], XX[,5], m),
      main="pred mean", xlab="x2", ylab="x5")
points(X[,2],X[,5],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,6], m),
      main="pred mean", xlab="x3", ylab="x6")
points(X[,3],X[,6],pch=19,cex=0.3)
image(interp.loess(XX[,1], XX[,2], m),
      main="pred mean", xlab="x1", ylab="x2")
points(X[,1],X[,2],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,4], m),
      main="pred mean", xlab="x3", ylab="x4")
points(X[,3],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,5], XX[,6], m),
      main="pred mean", xlab="x5", ylab="x6")
points(X[,5],X[,6],pch=19,cex=0.3)
image(interp.loess(XX[,1], XX[,4], m),
      main="pred mean", xlab="x1", ylab="x4")
points(X[,1],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,2], XX[,5], m),
      main="pred mean", xlab="x2", ylab="x5")
points(X[,2],X[,5],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,6], m),
      main="pred mean", xlab="x3", ylab="x6")
points(X[,3],X[,6],pch=19,cex=0.3)
summary(m)
source("plgp_ei.R")
min(pall$Y)
pall$Y
which.min(pall$Y)
par(mfrow=c(2,3))
image(interp.loess(XX[,1], XX[,2], m),
      main="pred mean", xlab="x1", ylab="x2")
points(X[,1],X[,2],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,4], m),
      main="pred mean", xlab="x3", ylab="x4")
points(X[,3],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,5], XX[,6], m),
      main="pred mean", xlab="x5", ylab="x6")
points(X[,5],X[,6],pch=19,cex=0.3)
image(interp.loess(XX[,1], XX[,4], m),
      main="pred mean", xlab="x1", ylab="x4")
points(X[,1],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,2], XX[,5], m),
      main="pred mean", xlab="x2", ylab="x5")
points(X[,2],X[,5],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,6], m),
      main="pred mean", xlab="x3", ylab="x6")
points(X[,3],X[,6],pch=19,cex=0.3)
source("plgp_ei.R")
min(pall$Y)
exp(min(pall$Y))
which.min(pall$Y)
pall$Y
par(mfrow=c(2,3))
image(interp.loess(XX[,1], XX[,2], m),
      main="pred mean", xlab="x1", ylab="x2")
points(X[,1],X[,2],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,4], m),
      main="pred mean", xlab="x3", ylab="x4")
points(X[,3],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,5], XX[,6], m),
      main="pred mean", xlab="x5", ylab="x6")
points(X[,5],X[,6],pch=19,cex=0.3)
image(interp.loess(XX[,1], XX[,4], m),
      main="pred mean", xlab="x1", ylab="x4")
points(X[,1],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,2], XX[,5], m),
      main="pred mean", xlab="x2", ylab="x5")
points(X[,2],X[,5],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,6], m),
      main="pred mean", xlab="x3", ylab="x6")
points(X[,3],X[,6],pch=19,cex=0.3)
source("plgp_ei.R")
min(pall$Y)
par(mfrow=c(2,3))
image(interp.loess(XX[,1], XX[,2], m),
      main="pred mean", xlab="x1", ylab="x2")
points(X[,1],X[,2],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,4], m),
      main="pred mean", xlab="x3", ylab="x4")
points(X[,3],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,5], XX[,6], m),
      main="pred mean", xlab="x5", ylab="x6")
points(X[,5],X[,6],pch=19,cex=0.3)
image(interp.loess(XX[,1], XX[,4], m),
      main="pred mean", xlab="x1", ylab="x4")
points(X[,1],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,2], XX[,5], m),
      main="pred mean", xlab="x2", ylab="x5")
points(X[,2],X[,5],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,6], m),
      main="pred mean", xlab="x3", ylab="x6")
points(X[,3],X[,6],pch=19,cex=0.3)
summary(pall$Y0
)
summary(pall$Y)
?PL
?prior.GP
source("plgp_ei.R")
min(pall$Y)
pall$Y
ls()
which.min(pall$Y)
?ls
ls(all.names=T)
?ls
?save.image
save.image(file="plgp.468.Rsave")
?prior.GP
par(mfrow=c(2,3))
image(interp.loess(XX[,1], XX[,2], m),
      main="pred mean", xlab="x1", ylab="x2")
points(X[,1],X[,2],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,4], m),
      main="pred mean", xlab="x3", ylab="x4")
points(X[,3],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,5], XX[,6], m),
      main="pred mean", xlab="x5", ylab="x6")
points(X[,5],X[,6],pch=19,cex=0.3)
image(interp.loess(XX[,1], XX[,4], m),
      main="pred mean", xlab="x1", ylab="x4")
points(X[,1],X[,4],pch=19,cex=0.3)
image(interp.loess(XX[,2], XX[,5], m),
      main="pred mean", xlab="x2", ylab="x5")
points(X[,2],X[,5],pch=19,cex=0.3)
image(interp.loess(XX[,3], XX[,6], m),
      main="pred mean", xlab="x3", ylab="x6")
points(X[,3],X[,6],pch=19,cex=0.3)
source("pglp_ei.R")
source("plgp_ei.R")
min(pall$Y)
which.min(pall$Y)
plot(pall$Y)
start <- 301
end <- 500
## do the particle learning
out <- PL(data=data.GP.improv, ## adaptive design PL via EI
          start=start, end=end, ## P=1,
          init=draw.GP,  ## init with Metropolis-Hastings
          lpredprob=lpredprob.GP, propagate=propagate.GP,
          prior=prior, addpall=addpall.GP, params=params.GP, cont=T)
min(pall$Y)
which.min(pall$Y)
q()
